package DataDictionaryLan.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintFunction;
import jetbrains.mps.smodel.runtime.ConstraintContext_CanBeParent;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class Set_Constraints extends BaseConstraintsDescriptor {
  public Set_Constraints() {
    super(CONCEPTS.Set$Y4);
  }

  @Override
  protected ConstraintFunction<ConstraintContext_CanBeParent, Boolean> calculateCanBeParentConstraint() {
    return new ConstraintFunction<ConstraintContext_CanBeParent, Boolean>() {
      @NotNull
      public Boolean invoke(@NotNull ConstraintContext_CanBeParent context, @Nullable CheckingNodeContext checkingNodeContext) {
        boolean result = staticCanBeAParent(context.getNode(), context.getChildNode(), context.getChildConcept(), context.getLink());

        if (!(result) && checkingNodeContext != null) {
          checkingNodeContext.setBreakingNode(canBeParentBreakingPoint);
        }

        return result;
      }
    };
  }
  private static boolean staticCanBeAParent(SNode node, SNode childNode, SAbstractConcept childConcept, SContainmentLink link) {
    return SConceptOperations.isExactly(SNodeOperations.asSConcept(childConcept), CONCEPTS.Aggregation$vi) || SConceptOperations.isExactly(SNodeOperations.asSConcept(childConcept), CONCEPTS.Field$wG);
  }
  private static final SNodePointer canBeParentBreakingPoint = new SNodePointer("r:39af35bd-6035-49b4-8b40-6f8b9f67bec2(DataDictionaryLan.constraints)", "5366905740650810554");

  private static final class CONCEPTS {
    /*package*/ static final SConcept Set$Y4 = MetaAdapterFactory.getConcept(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067f06eaL, "DataDictionaryLan.structure.Set");
    /*package*/ static final SConcept Field$wG = MetaAdapterFactory.getConcept(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606822015L, "DataDictionaryLan.structure.Field");
    /*package*/ static final SConcept Aggregation$vi = MetaAdapterFactory.getConcept(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067ce18bL, "DataDictionaryLan.structure.Aggregation");
  }
}
