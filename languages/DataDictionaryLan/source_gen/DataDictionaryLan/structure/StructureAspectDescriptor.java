package DataDictionaryLan.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractDomain = createDescriptorForAbstractDomain();
  /*package*/ final ConceptDescriptor myConceptAggregation = createDescriptorForAggregation();
  /*package*/ final ConceptDescriptor myConceptAndConstraint = createDescriptorForAndConstraint();
  /*package*/ final ConceptDescriptor myConceptBetweenConstraint = createDescriptorForBetweenConstraint();
  /*package*/ final ConceptDescriptor myConceptBoolean = createDescriptorForBoolean();
  /*package*/ final ConceptDescriptor myConceptCharacter = createDescriptorForCharacter();
  /*package*/ final ConceptDescriptor myConceptComparasionConstraint = createDescriptorForComparasionConstraint();
  /*package*/ final ConceptDescriptor myConceptConstraint = createDescriptorForConstraint();
  /*package*/ final ConceptDescriptor myConceptConstraintCriterum = createDescriptorForConstraintCriterum();
  /*package*/ final ConceptDescriptor myConceptConstraintOperator = createDescriptorForConstraintOperator();
  /*package*/ final ConceptDescriptor myConceptDataDictionary = createDescriptorForDataDictionary();
  /*package*/ final ConceptDescriptor myConceptDate = createDescriptorForDate();
  /*package*/ final ConceptDescriptor myConceptDouble = createDescriptorForDouble();
  /*package*/ final ConceptDescriptor myConceptExclusiveSpecialization = createDescriptorForExclusiveSpecialization();
  /*package*/ final ConceptDescriptor myConceptField = createDescriptorForField();
  /*package*/ final ConceptDescriptor myConceptFieldDefinition = createDescriptorForFieldDefinition();
  /*package*/ final ConceptDescriptor myConceptIElement = createDescriptorForIElement();
  /*package*/ final ConceptDescriptor myConceptISpecialization = createDescriptorForISpecialization();
  /*package*/ final ConceptDescriptor myConceptIStructure = createDescriptorForIStructure();
  /*package*/ final ConceptDescriptor myConceptInConstraint = createDescriptorForInConstraint();
  /*package*/ final ConceptDescriptor myConceptInValue = createDescriptorForInValue();
  /*package*/ final ConceptDescriptor myConceptInteger = createDescriptorForInteger();
  /*package*/ final ConceptDescriptor myConceptNonExclusiveSpecialization = createDescriptorForNonExclusiveSpecialization();
  /*package*/ final ConceptDescriptor myConceptNotNulConstraint = createDescriptorForNotNulConstraint();
  /*package*/ final ConceptDescriptor myConceptOrConstraint = createDescriptorForOrConstraint();
  /*package*/ final ConceptDescriptor myConceptPredefinedDomain = createDescriptorForPredefinedDomain();
  /*package*/ final ConceptDescriptor myConceptSemanticDomain = createDescriptorForSemanticDomain();
  /*package*/ final ConceptDescriptor myConceptSemanticDomainDefinition = createDescriptorForSemanticDomainDefinition();
  /*package*/ final ConceptDescriptor myConceptSet = createDescriptorForSet();
  /*package*/ final ConceptDescriptor myConceptStructure = createDescriptorForStructure();
  /*package*/ final ConceptDescriptor myConceptStructureDefinition = createDescriptorForStructureDefinition();
  /*package*/ final ConceptDescriptor myConceptVarchar = createDescriptorForVarchar();
  /*package*/ final EnumerationDescriptor myEnumerationOperations = new EnumerationDescriptor_Operations();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractDomain, myConceptAggregation, myConceptAndConstraint, myConceptBetweenConstraint, myConceptBoolean, myConceptCharacter, myConceptComparasionConstraint, myConceptConstraint, myConceptConstraintCriterum, myConceptConstraintOperator, myConceptDataDictionary, myConceptDate, myConceptDouble, myConceptExclusiveSpecialization, myConceptField, myConceptFieldDefinition, myConceptIElement, myConceptISpecialization, myConceptIStructure, myConceptInConstraint, myConceptInValue, myConceptInteger, myConceptNonExclusiveSpecialization, myConceptNotNulConstraint, myConceptOrConstraint, myConceptPredefinedDomain, myConceptSemanticDomain, myConceptSemanticDomainDefinition, myConceptSet, myConceptStructure, myConceptStructureDefinition, myConceptVarchar);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AbstractDomain:
        return myConceptAbstractDomain;
      case LanguageConceptSwitch.Aggregation:
        return myConceptAggregation;
      case LanguageConceptSwitch.AndConstraint:
        return myConceptAndConstraint;
      case LanguageConceptSwitch.BetweenConstraint:
        return myConceptBetweenConstraint;
      case LanguageConceptSwitch.Boolean:
        return myConceptBoolean;
      case LanguageConceptSwitch.Character:
        return myConceptCharacter;
      case LanguageConceptSwitch.ComparasionConstraint:
        return myConceptComparasionConstraint;
      case LanguageConceptSwitch.Constraint:
        return myConceptConstraint;
      case LanguageConceptSwitch.ConstraintCriterum:
        return myConceptConstraintCriterum;
      case LanguageConceptSwitch.ConstraintOperator:
        return myConceptConstraintOperator;
      case LanguageConceptSwitch.DataDictionary:
        return myConceptDataDictionary;
      case LanguageConceptSwitch.Date:
        return myConceptDate;
      case LanguageConceptSwitch.Double:
        return myConceptDouble;
      case LanguageConceptSwitch.ExclusiveSpecialization:
        return myConceptExclusiveSpecialization;
      case LanguageConceptSwitch.Field:
        return myConceptField;
      case LanguageConceptSwitch.FieldDefinition:
        return myConceptFieldDefinition;
      case LanguageConceptSwitch.IElement:
        return myConceptIElement;
      case LanguageConceptSwitch.ISpecialization:
        return myConceptISpecialization;
      case LanguageConceptSwitch.IStructure:
        return myConceptIStructure;
      case LanguageConceptSwitch.InConstraint:
        return myConceptInConstraint;
      case LanguageConceptSwitch.InValue:
        return myConceptInValue;
      case LanguageConceptSwitch.Integer:
        return myConceptInteger;
      case LanguageConceptSwitch.NonExclusiveSpecialization:
        return myConceptNonExclusiveSpecialization;
      case LanguageConceptSwitch.NotNulConstraint:
        return myConceptNotNulConstraint;
      case LanguageConceptSwitch.OrConstraint:
        return myConceptOrConstraint;
      case LanguageConceptSwitch.PredefinedDomain:
        return myConceptPredefinedDomain;
      case LanguageConceptSwitch.SemanticDomain:
        return myConceptSemanticDomain;
      case LanguageConceptSwitch.SemanticDomainDefinition:
        return myConceptSemanticDomainDefinition;
      case LanguageConceptSwitch.Set:
        return myConceptSet;
      case LanguageConceptSwitch.Structure:
        return myConceptStructure;
      case LanguageConceptSwitch.StructureDefinition:
        return myConceptStructureDefinition;
      case LanguageConceptSwitch.Varchar:
        return myConceptVarchar;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationOperations);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAbstractDomain() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "AbstractDomain", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9bL);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437275");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAggregation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Aggregation", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067ce18bL);
    b.class_(false, false, false);
    b.parent(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067981e8L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650668427");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAndConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "AndConstraint", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b14560692eefcL);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.ConstraintOperator
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b14560692eef4L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740652113660");
    b.version(3);
    b.alias("AND");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBetweenConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "BetweenConstraint", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d03L);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.ConstraintCriterum
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d01L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650376451");
    b.version(3);
    b.property("number1", 0x4a7b145606786d04L).type(PrimitiveTypeId.INTEGER).origin("5366905740650376452").done();
    b.property("number2", 0x4a7b145606786d06L).type(PrimitiveTypeId.INTEGER).origin("5366905740650376454").done();
    b.alias("BETWEEN");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoolean() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Boolean", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795aacL);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.PredefinedDomain
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9fL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437292");
    b.version(3);
    b.alias("BOOLEAN");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCharacter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Character", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795aadL);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.PredefinedDomain
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9fL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437293");
    b.version(3);
    b.alias("CHARACTER");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComparasionConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "ComparasionConstraint", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a91L);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.ConstraintCriterum
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d01L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437265");
    b.version(3);
    b.property("number1", 0x4a7b145606795a92L).type(PrimitiveTypeId.INTEGER).origin("5366905740650437266").done();
    b.property("operation", 0x4a7b145606795a94L).type(MetaIdFactory.dataTypeId(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067f06ddL)).origin("5366905740650437268").done();
    b.alias("COMPARE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Constraint", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786cfdL);
    b.class_(false, false, false);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650376445");
    b.version(3);
    b.property("description", 0x4a7b145606786cfeL).type(PrimitiveTypeId.STRING).origin("5366905740650376446").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintCriterum() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "ConstraintCriterum", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d01L);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.Constraint
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786cfdL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650376449");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstraintOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "ConstraintOperator", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b14560692eef4L);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.Constraint
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786cfdL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740652113652");
    b.version(3);
    b.aggregate("constraint1", 0x4a7b14560692eef6L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786cfdL).optional(false).ordered(true).multiple(false).origin("5366905740652113654").done();
    b.aggregate("constraint2", 0x4a7b14560692eef8L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786cfdL).optional(false).ordered(true).multiple(false).origin("5366905740652113656").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataDictionary() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "DataDictionary", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b14560686268fL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740651275919");
    b.version(3);
    b.aggregate("structures", 0x4a7b145606862693L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067f55f1L).optional(true).ordered(true).multiple(true).origin("5366905740651275923").done();
    b.aggregate("predefinedDomains", 0x4a7b145606862695L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9fL).optional(true).ordered(true).multiple(true).origin("5366905740651275925").done();
    b.aggregate("semanticDomains", 0x4a7b145606862698L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795aa3L).optional(true).ordered(true).multiple(true).origin("5366905740651275928").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Date", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795aaeL);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.PredefinedDomain
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9fL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437294");
    b.version(3);
    b.alias("DATE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDouble() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Double", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795aafL);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.PredefinedDomain
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9fL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437295");
    b.version(3);
    b.alias("DOUBLE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExclusiveSpecialization() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "ExclusiveSpecialization", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067d173eL);
    b.class_(false, false, false);
    b.parent(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067d173bL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650682174");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Field", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606822015L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067980e5L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740651012117");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFieldDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "FieldDefinition", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795ab4L);
    b.class_(false, false, false);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437300");
    b.version(3);
    b.associate("field", 0x4a7b1456067980d5L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606822015L).optional(false).origin("5366905740650447061").done();
    b.aggregate("domain", 0x4a7b1456067980cfL).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9bL).optional(false).ordered(true).multiple(false).origin("5366905740650447055").done();
    b.aggregate("constraint", 0x4a7b1456067980d1L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786cfdL).optional(false).ordered(true).multiple(false).origin("5366905740650447057").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "IElement", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067980e5L);
    b.interface_();
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650447077");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISpecialization() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "ISpecialization", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067d173bL);
    b.interface_();
    b.parent(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067981e8L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650682171");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIStructure() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "IStructure", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067981e8L);
    b.interface_();
    b.parent(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067980e5L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650447336");
    b.version(3);
    b.aggregate("elements", 0x4a7b1456067981ebL).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067980e5L).optional(true).ordered(true).multiple(true).origin("5366905740650447339").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "InConstraint", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d10L);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.ConstraintCriterum
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d01L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650376464");
    b.version(3);
    b.property("strings", 0x4a7b145606786d11L).type(PrimitiveTypeId.STRING).origin("5366905740650376465").done();
    b.aggregate("values", 0x4a7b145606786d13L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d15L).optional(false).ordered(true).multiple(true).origin("5366905740650376467").done();
    b.alias("IN");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "InValue", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d15L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650376469");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInteger() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Integer", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795ab0L);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.PredefinedDomain
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9fL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437296");
    b.version(3);
    b.alias("INTEGER");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonExclusiveSpecialization() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "NonExclusiveSpecialization", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067ebf74L);
    b.class_(false, false, false);
    b.parent(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067d173bL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650790772");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNotNulConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "NotNulConstraint", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d19L);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.ConstraintCriterum
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d01L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650376473");
    b.version(3);
    b.alias("NOT NULL");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrConstraint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "OrConstraint", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b14560693a5ccL);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.ConstraintOperator
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b14560692eef4L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740652160460");
    b.version(3);
    b.alias("OR");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredefinedDomain() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "PredefinedDomain", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9fL);
    b.class_(false, true, false);
    // extends: DataDictionaryLan.structure.AbstractDomain
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9bL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437279");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSemanticDomain() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "SemanticDomain", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795aa0L);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.AbstractDomain
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9bL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437280");
    b.version(3);
    b.associate("semanticDomainDef", 0x4a7b145606795aa1L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795aa3L).optional(false).origin("5366905740650437281").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSemanticDomainDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "SemanticDomainDefinition", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795aa3L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437283");
    b.version(3);
    b.aggregate("domain", 0x4a7b145606795aa6L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9fL).optional(false).ordered(true).multiple(false).origin("5366905740650437286").done();
    b.aggregate("constraint", 0x4a7b145606795aa8L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786cfdL).optional(false).ordered(true).multiple(false).origin("5366905740650437288").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Set", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067f06eaL);
    b.class_(false, false, false);
    b.parent(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067981e8L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650809066");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructure() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Structure", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0xed6c1e7ab041105L);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.Field
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606822015L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/1069255162297848069");
    b.version(3);
    b.property("isStructure", 0xed6c1e7ab719273L).type(PrimitiveTypeId.BOOLEAN).origin("1069255162305024627").done();
    b.associate("structureDefinition", 0xed6c1e7ab042442L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067f55f1L).optional(false).origin("1069255162297852994").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructureDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "StructureDefinition", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067f55f1L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650829297");
    b.version(3);
    b.aggregate("structure", 0x4a7b1456067f55f4L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b1456067981e8L).optional(false).ordered(true).multiple(false).origin("5366905740650829300").done();
    b.aggregate("fieldDefinitions", 0x4a7b1456067f55f6L).target(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795ab4L).optional(true).ordered(true).multiple(true).origin("5366905740650829302").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarchar() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DataDictionaryLan", "Varchar", 0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795ab2L);
    b.class_(false, false, false);
    // extends: DataDictionaryLan.structure.PredefinedDomain
    b.super_(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606795a9fL);
    b.origin("r:ba9c4e94-68da-4c37-ad00-835bcff118fe(DataDictionaryLan.structure)/5366905740650437298");
    b.version(3);
    b.alias("VARCHAR");
    return b.create();
  }
}
