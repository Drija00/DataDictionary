package DataDictionaryLan.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;

public class check_BetweenConstraint_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_BetweenConstraint_NonTypesystemRule() {
  }
  public void applyRule(final SNode betweenConstraint, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    if (SPropertyOperations.getInteger(betweenConstraint, PROPS.number1$kRwK) > SPropertyOperations.getInteger(betweenConstraint, PROPS.number2$kRYM)) {
      {
        final MessageTarget errorTarget = new NodeMessageTarget();
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(betweenConstraint, "Prvi broj mora biti manji od drugog broja!", "r:d26a83d4-ec7d-4f6a-b9d9-5d05b0352b0d(DataDictionaryLan.typesystem)", "5366905740650437093", null, errorTarget);
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.BetweenConstraint$CP;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }

  private static final class PROPS {
    /*package*/ static final SProperty number2$kRYM = MetaAdapterFactory.getProperty(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d03L, 0x4a7b145606786d06L, "number2");
    /*package*/ static final SProperty number1$kRwK = MetaAdapterFactory.getProperty(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d03L, 0x4a7b145606786d04L, "number1");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept BetweenConstraint$CP = MetaAdapterFactory.getConcept(0xc2fcd0fd4f134552L, 0x8306bb0d4f1a7057L, 0x4a7b145606786d03L, "DataDictionaryLan.structure.BetweenConstraint");
  }
}
